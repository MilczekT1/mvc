sd
        File accountActivationJsonFile = new File(getClass().getClassLoader().getResource("AccountActivation.json").getFile());
        assertTrue(accountActivationJsonFile.exists());

        StringBuilder result = new StringBuilder();
        try (Scanner scanner = new Scanner(accountActivationJsonFile)) {
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                result.append(line).append("\n");
            }
        }
        accountActivationJsonFileAsString = result.toString();
        circleci/openjdk:10.0.2-jdk-browsers
        https://circleci.com/docs/2.0/docker-image-tags.json
77.55.237.245

GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" git clone -b acc-mgt-consumers-integration --single-branch git@bitbucket

server:
  ssl:
    enabled: false
    key-alias: budget-ssc
    key-store: budget-ssc.p12
    key-store-type: PKCS12
    key-store-password: '{cipher}7d48901eda44ffbd07f11fef74051cbd160c402c0662811ce2a35593ca7de110'
    trust-store: budget-ssc.p12
    trust-store-password: '{cipher}7d48901eda44ffbd07f11fef74051cbd160c402c0662811ce2a35593ca7de110'

    @Bean
+    @ConditionalOnProperty(value = "server.ssl.enabled", havingValue = "true", matchIfMissing = false)
+    public RestTemplate restTemplateSLL() throws KeyStoreException, NoSuchAlgorithmException, KeyManagementException {
+        TrustStrategy acceptingTrustStrategy = (X509Certificate[] chain, String authType) -> true;
+        SSLContext sslContext = new SSLContextBuilder()
+                .loadTrustMaterial(null, acceptingTrustStrategy)
+                .build();
+        SSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(sslContext, NoopHostnameVerifier.INSTANCE);
+        HttpClient httpClient = HttpClients.custom()
+                .setSSLSocketFactory(socketFactory)
+                .build();
+        HttpComponentsClientHttpRequestFactory factory =
+                new HttpComponentsClientHttpRequestFactory(httpClient);
+        return new RestTemplate(factory);
+    }
